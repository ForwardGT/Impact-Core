 buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "MavenRepo"
            url = "https://repo.maven.apache.org/maven2"
        }
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'signing'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.coremod.version}"
group = "Impact"
archivesBaseName = "Impact-core"

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}-${config.minecraft.version}"
    runDir = "idea"
}

repositories {
    mavenCentral()
}

 configurations {
     mods
     provided
     embedded
     compile.extendsFrom provided, embedded
 }

dependencies {
    provided fileTree(dir: 'run/', include:'*.jar')
    compileOnly fileTree(dir: 'notRun/', include:'*.jar')
    compileOnly 'io.gitlab.hohserg.elegant.networking:annotation-processor:3.14'
}


processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    exclude '**/Thumbs.db'
}

jar {
		manifest {
		attributes 'FMLCorePlugin': 'com.impact.loader.HooksLoader'
		attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}


task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest {
    }
}

artifacts {
    archives devJar
}