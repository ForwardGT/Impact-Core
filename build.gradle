buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "MavenRepo"
            url = "https://repo.maven.apache.org/maven2"
        }
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath "de.undercouch:gradle-download-task:3.1.2"
    }
}

import de.undercouch.gradle.tasks.download.Download
apply plugin: 'forge'
apply plugin: 'signing'

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.coremod.version}"
group= "Impact" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Impact"

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}-${config.minecraft.version}"
    runDir = "idea"
}

repositories {}

dependencies {
compile files("libs/AppleCore-mc1.7.10-1.3.9.jar")
compile files("libs/appliedenergistics2-rv3-beta-20.jar")
compile files("libs/CodeChickenCore-1.7.10-1.0.7.47-universal.jar")
compile files("libs/CodeChickenLib-1.7.10-1.1.3.138-universal.jar")
compile files("libs/EnderCore-1.7.10-0.2.0.39_beta.jar")
compile files("libs/EnderIO-1.7.10-2.3.0.432_beta.jar")
compile files("libs/GalacticGreg-1.7.10-0.9.9.jar")
compile files("libs/Galacticraft-API-1.7-3.0.12.504.jar")
compile files("libs/GalacticraftCore-1.7-3.0.12.504.jar")
compile files("libs/Galacticraft-Planets-1.7-3.0.12.504.jar")
compile files("libs/GalaxySpace-1.1.3a STABLE.jar")
compile files("libs/gregtech-5.09.34.58[0.08]-dev.jar")
compile files("libs/IC2NuclearControl-2.3.4a.jar")
compile files("libs/industrialcraft-2-2.2.828-experimental-dev.jar")
compile files("libs/Mantle-1.7.10-0.3.2b.jar")
compile files("libs/MicdoodleCore-1.7-3.0.12.504.jar")
compile files("libs/neiaddons-1.12.15.41-mc1.7.10.jar")
compile files("libs/NEIIntegration-MC1.7.10-1.1.2.jar")
compile files("libs/NotEnoughItems-1.7.10-1.0.5.120-universal.jar")
compile files("libs/SpartakCore-1.7.10-0.0.5[0.08]-dev.jar")
compile files("libs/TConstruct-1.7.10-1.8.9.12-GTNH.jar")
compile files("libs/Waila-1.5.10_1.7.10.jar")
compile files("libs/WAILAPlugins-MC1.7.10-0.2.3.jar")
compile files("libs/YAMCore-1.7.10-0.5.77.jar")
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    exclude '**/Thumbs.db'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest {
    }
}

artifacts {
    archives devJar
}